@page

<!DOCTYPE html>
<html lang="en">

<head>
    <title>
        Microsoft Teams Conversation Tab Sample app
    </title>
    <link rel="stylesheet" type="text/css" href="/styles/msteams-16.css"/>
    <link rel="stylesheet" type="text/css" href="/styles/custom.css"/>
    <script src="https://statics.teams.cdn.office.net/sdk/v1.10.0/js/MicrosoftTeams.min.js"
        integrity="sha384-6oUzHUqESdbT3hNPDDZUa/OunUj5SoxuMXNek1Dwe6AmChzqc6EJhjVrJ93DY/Bv"
        crossorigin="anonymous"></script>
    <script>
        microsoftTeams.initialize();

        // Save configuration changes
        microsoftTeams.settings.registerOnSaveHandler(function (saveEvent) {
            // Let the Microsoft Teams platform know what you want to load based on
            // what the user configured on this page
            microsoftTeams.settings.setSettings({
                contentUrl: createTabUrl(),
                entityId: createTabUrl(),
            });

            // Tells Microsoft Teams platform that we are done saving our settings. Microsoft Teams waits
            // for the app to call this API before it dismisses the dialog. If the wait times out, you will
            // see an error indicating that the configuration settings could not be saved.
            saveEvent.notifySuccess();
        });

        function choiceOnChange(element) {
            var tabChoice = document.getElementById('tabChoice');
            if (tabChoice) {
                var selectedTab = element.options[element.selectedIndex].value;

                // This API tells Microsoft Teams to enable the 'Save' button. Since Microsoft Teams always assumes
                // an initial invalid state, without this call the 'Save' button will never be enabled.
                microsoftTeams.settings.setValidityState(
                    selectedTab === 'conversationTab' || selectedTab === 'conversationTab'
                );
            }
        }

        // Create the URL that Microsoft Teams will load in the tab. You can compose any URL even with query strings.
        function createTabUrl() {
            var tabChoice = document.getElementById('tabChoice');
            var selectedTab = tabChoice[tabChoice.selectedIndex].value;

            return (
                window.location.protocol + '//' + window.location.host + '/' + selectedTab
            );
        }
    </script>
</head>

<body class="theme-light">
    <div class="surface">
        <div class="panel">
            <div class="font-semibold font-title">Configure your app here
                <p>
                <div>
                    <label for="tabChoice"></label>Select the tab you would like to see:
                    <select id="tabChoice" name="tabChoice" onchange="choiceOnChange(this)">
                        <option value="" selected="selected">(Select a tab)</option>
                        <option value="conversationTab">Conversation Tab</option>
                    </select>
                </div>
                </p>
            </div>
        </div>
    </div>
</body>

</html>